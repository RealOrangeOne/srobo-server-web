worker_processes      1;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;

  default_type        application/octet-stream;
  sendfile            on;
  keepalive_timeout   65;
  resolver            8.8.8.8 valid=5s;

  gzip on;
  gzip_types
    text/css
    text/plain
    text/xml
    application/json
    application/x-javascript
    text/javascript
    image/svg+xml
    image/x-icon
  ;

  {% if add_hsts_header %}
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
  {% endif %}
  add_header X-Frame-Options "SAMEORIGIN" always;

  # HTTPS certificates
  {% if certbot_create_if_missing %}
    {% for certs in certbot_certs %}
      ssl_certificate     /etc/letsencrypt/live/{{ certs.domains[0] }}/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/{{ certs.domains[0] }}/privkey.pem;
    {% endfor %}
  {% else %}
    ssl_certificate     /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
  {% endif %}

  # SSL configuration from https://ssl-config.mozilla.org/#server=nginx&version=1.18.0&config=intermediate&openssl=1.1.1f&ocsp=false&guideline=5.6
  ssl_session_timeout 1d;
  ssl_session_cache shared:SRTLS:10m;  # about 40000 sessions
  ssl_session_tickets off;

  ssl_dhparam /etc/nginx/dhparam.txt;

  # intermediate configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 default_server ssl http2 fastopen=256;
    listen [::]:443 default_server ssl http2 fastopen=256;

    location / {
      # Temporary redirect to avoid clobbering unknown domains.
      return 307 https://{{ canonical_hostname }}$request_uri;
    }
  }

  server {
    # Note: the listen options for these ports are configured by the above
    # server block (nginx allows them to be specified exactly once even though
    # several server blocks can listen to the same port).
    listen         443 ssl;
    listen         [::]:443 ssl;
    server_name    {{ canonical_hostname }} {{ secondary_hostnames }};
    root           /var/www;

    proxy_pass_request_headers on;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  https;
    proxy_set_header Host               $host;

    #location /ide/ {
    #  proxy_pass https://patience.studentrobotics.org/ide/;
    #}

    location /forum/ {
      # proxy_pass https://patience.studentrobotics.org/forum/;
      return 307 /docs/team_admin/discord;
    }

    #location /docs/python/ {
    #  proxy_pass https://patience.studentrobotics.org/docs/python/;
    #}

    location /docs/ {
      proxy_pass       https://srobo.github.io/docs/;
      proxy_set_header Host srobo.github.io;
    }

    #location /userman/ {
    #  proxy_pass https://patience.studentrobotics.org/userman/;
    #}

    #location /code-submitter/ {
    #  proxy_pass https://patience.studentrobotics.org/code-submitter/;
    #}

    #location /robogit/ {
    #  proxy_pass https://patience.studentrobotics.org/robogit/;
    #}

    #location /robogit-ro/ {
    #  proxy_pass https://patience.studentrobotics.org/robogit-ro/;
    #}

    location /comp-api/ {
      proxy_pass https://srcomp.studentrobotics.org/comp-api/;
    }

    # During the competition we un-comment this block to override the homepage
    # with the comeptition-specific one
    # location = / {
    #   proxy_pass       https://srobo.github.io/competition-website/comp/;
    #   proxy_set_header Host srobo.github.io;
    #
    #   sub_filter "/competition-website/comp/" "/comp/";
    #   sub_filter_once off;
    #   sub_filter_last_modified on;
    #   # Tell GitHub that we want these pages to be sent to us uncompressed
    #   # otherwise the sub_filter above doesn't work. We'll compress it on the
    #   # way out anyway, so clients don't lose anything by us doing this.
    #   proxy_set_header Accept-Encoding "";
    # }
    # Provide access to the competition pages under the normal prefix
    location /comp/ {
      proxy_pass       https://srobo.github.io/competition-website/comp/;
      proxy_set_header Host srobo.github.io;

      sub_filter "/competition-website/comp/" "/comp/";
      sub_filter_once off;
      sub_filter_last_modified on;
      # Tell GitHub that we want these pages to be sent to us uncompressed
      # otherwise the sub_filter above doesn't work. We'll compress it on the
      # way out anyway, so clients don't lose anything by us doing this.
      proxy_set_header Accept-Encoding "";
    }
    # Also provide access under the prefix which github insists on using
    # so that the secondary resources (JS, CSS, etc.) load
    location /competition-website/ {
      proxy_pass       https://srobo.github.io/competition-website/;
      proxy_set_header Host srobo.github.io;
    }

    # Disable custom media consent endpoint
    #location /mediaconsent/ {
    #  proxy_pass https://patience.studentrobotics.org/mediaconsent/;
    #}

    #location /tickets/ {
    #  proxy_pass https://patience.studentrobotics.org/tickets/;
    #}

    #location /ticket-api/ {
    #  proxy_pass https://patience.studentrobotics.org/ticket-api/;
    #}

    location /style/ {
      proxy_pass       https://srobo.github.io/style/;
      proxy_set_header Host srobo.github.io;
    }

    location /runbook/ {
      proxy_pass       https://srobo.github.io/runbook/;
      proxy_set_header Host srobo.github.io;
    }

    location /srawn/ {
      proxy_pass       https://srobo.github.io/srawn/;
      proxy_set_header Host srobo.github.io;
    }

    # GitHub has replaced various development related services which used to be
    # on saffron.
    rewrite ^/(c?git|gerrit) https://github.com/srobo/ redirect;

    # Various old website redirects
    rewrite ^/schools/how_to_enter /compete redirect;
    rewrite ^/about/how_to_help    /volunteer redirect;
    rewrite ^/about/contactus      /contact redirect;
    rewrite ^/sponsors             /sponsor/ redirect;
    rewrite ^/about/sponsors       /sponsor/ redirect;
    rewrite ^/key_dates            /events redirect;
    rewrite ^/feed.php             /feed.xml redirect;
    rewrite ^/password             /userman/ permanent;
    rewrite ^/rules                /docs/rules/ permanent;

    # The runbook has replaced trac
    rewrite ^/trac                 /runbook/ permanent;

    # The kitbook has been incorporated back into the runbook
    rewrite ^/kitbook              /runbook/ permanent;

    # Form for kit feedback
    rewrite ^/kit-feedback         https://forms.gle/2fh6dGajznkDGPtb9 redirect;

    # Donation Link
    rewrite ^/donate               https://link.justgiving.com/v1/charity/donate/charityId/3118662?tipScheme=TipJar2.1&isRecurring=false&amount=10.00&reference=givingcheckout_tj21 redirect;

    # Volunteering Links
    rewrite ^/join                 https://docs.google.com/forms/d/e/1FAIpQLSdP55Lz_qNEx7t-hdQctt2VzXdYikOe9k2dKsDzEZZG7-nqTw/viewform redirect;
    
    # Short link for livestream embed, mostly for use in kiosk screens and other automation
    rewrite ^/comp-livestream      https://www.youtube-nocookie.com/embed/7HNG2bqwXlo redirect;

    # We have renamed the news section to blog
    rewrite ^/news/(.*) /blog/$1/ redirect;
    rewrite ^/assets/image/content/news/(.*) /images/content/blog/$1 redirect;

    # About page has been merged into the home page
    rewrite ^/about / redirect;

    location / {
      proxy_pass       https://srobo.github.io/website/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io redirect issue (see above)
      proxy_redirect   http://srobo.github.io/website/ /;
      proxy_redirect   https://srobo.github.io/website/ /;

      sub_filter "/website/" "/";
      sub_filter_once off;
      sub_filter_types application/xml text/calendar text/css; # in addition to text/html
      sub_filter_last_modified on;

      # Tell GitHub that we want these pages to be sent to us uncompressed
      # otherwise the sub_filter above doesn't work. We'll compress it on the
      # way out anyway, so clients don't lose anything by us doing this.
      proxy_set_header Accept-Encoding "";
    }

    error_page        404 /404.html;
    error_page        500 502 503 504 /error/index.html;
  }
}
